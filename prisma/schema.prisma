// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  seed = "ts-node prisma/seed.ts"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Deck {
  deck_id           Int        @id @default(autoincrement())
  name              String
  parent_id         Int?
  created_timestamp DateTime   @default(now())
  updated_timestamp DateTime   @default(now())
  parent            Deck?      @relation("DeckToDeck", fields: [parent_id], references: [deck_id])
  children          Deck[]     @relation("DeckToDeck")
  deckCards         DeckCard[]

  @@map("deck")
}

model Card {
  card_id           Int        @id @default(autoincrement())
  content           String
  created_timestamp DateTime   @default(now())
  updated_timestamp DateTime   @default(now())
  deckCards         DeckCard[]

  @@map("card")
}

model DeckCard {
  cardId  Int
  deckId  Int
  order   Int       // Added field to keep track of card order within a deck
  card    Card      @relation(fields: [cardId], references: [card_id])
  deck    Deck      @relation(fields: [deckId], references: [deck_id])

  @@id([cardId, deckId])
  @@unique([deckId, order]) // Composite unique constraint
}
